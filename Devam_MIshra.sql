--used Oracle SQl
-- Tables
--1.
--Orders (OrderID, CustomerID, OrderDate, TotalAmount)
--2.
--Customers (CustomerID, FirstName, LastName, Email)
--3.
--Products (ProductID, ProductName, UnitPrice)
--4.
--OrderDetails (OrderDetailID, OrderID, ProductID, Quantity)

--Assignment task

--1 Retrieve a list of customers who have made at least one purchase, along with their total spending.

SELECT
    CUSTOMERS.FIRSTNAME,
    CUSTOMERS.LASTNAME,
    SUM(ORDERS.TOTALAMOUNT)      AS TOTALAMOUNT,
    COUNT(ORDERDETAILS.QUANTITY) AS PURCHASEDPRODUCTS
FROM
    CUSTOMERS
    INNER JOIN ORDERS
    ON ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID
    INNER JOIN ORDERDETAILS
    ON ORDERDETAILS.ORDERID=ORDERS.ORDERID
    INNER JOIN PRODUCTS
    ON PRODUCTS.PRODUCTID=ORDERDETAILS.PRODUCTID
GROUP BY
    CUSTOMERS.FIRSTNAME,
    CUSTOMERS.LASTNAME
HAVING
    COUNT(ORDERDETAILS.QUANTITY)>=1
ORDER BY
    TOTALAMOUNT DESC;

--2 Calculate the total revenue generated from sales in the year 2022

SELECT
    SUM(ORDERDETAILS.QUANTITY)AS                     TOTAL_UNITS,
    PRODUCTS.UNITPRICE                             AS PRICE_PER_UNITS,
    SUM(ORDERDETAILS.QUANTITY *PRODUCTS.UNITPRICE) AS TOTAL_REVENUE
FROM
    ORDERS
    INNER JOIN ORDERDETAILS
    ON ORDERS.ORDERID=ORDERDETAILS.ORDERID
    INNER JOIN PRODUCTS
    ON PRODUCTS.PRODUCTID=ORDERDETAILS.PRODUCTID
WHERE
    EXTRACT(YEAR FROM ORDERDATE) = 2022
GROUP BY
    PRODUCTS.UNITPRICE;

-- 3   Identify the top 5 products by revenue in descending order.

SELECT
    DISTINCT(PRODUCTS.PRODUCTNAME)                         AS PRODUCT,
    SUM(ORDERDETAILS.QUANTITY *PRODUCTS.UNITPRICE)AS REVENUES
FROM
    ORDERDETAILS
    INNER JOIN PRODUCTS
    ON ORDERDETAILS.PRODUCTID=PRODUCTS.PRODUCTID
GROUP BY
    PRODUCTS.PRODUCTNAME
ORDER BY
    PRODUCTNAME DESC FETCH FIRST 5 ROW ONLY;  -- as this query is in Oracle SQL so Oracle SQL does not support the LIMIT clause and Top keyword thats why i used ' FETCH FIRST' clause 

--4Find the customer with the highest total spending and list their details.


SELECT
    CUSTOMERS.FIRSTNAME,
    CUSTOMERS.LASTNAME,
    CUSTOMERS.EMAIL,
    SUM(ORDERDETAILS.QUANTITY) AS PURCHASEDPRODUCTS,
    SUM(ORDERS.TOTALAMOUNT)    AS TOTALAMOUNT
 --SUM(ORDERDETAILS.QUANTITY *PRODUCTS.UNITPRICE) AS TOTAL_spent
FROM
    CUSTOMERS
    INNER JOIN ORDERS
    ON ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID
    INNER JOIN ORDERDETAILS
    ON ORDERDETAILS.ORDERID=ORDERS.ORDERID
    INNER JOIN PRODUCTS
    ON PRODUCTS.PRODUCTID=ORDERDETAILS.PRODUCTID
GROUP BY
    CUSTOMERS.FIRSTNAME,
    CUSTOMERS.LASTNAME,
    CUSTOMERS.EMAIL
ORDER BY
    TOTALAMOUNT DESC;

--5 Determine the average order value (AOV) for each year between 2020 and 2022.

SELECT
    EXTRACT(YEAR FROM ORDERDATE)   AS ORDER_YEAR,
    ROUND(AVG(AVG_ORDER_VALUE), 2) AS AVG_ORDER_VALUE,
    ROUND(AVG(AVG_QUANTITY), 2)    AS AVG_QUANTITY
FROM
    (
        SELECT
            ORDERS.ORDERID,
            ORDERS.ORDERDATE,
            SUM(ORDERDETAILS.QUANTITY)                     AS AVG_QUANTITY,
            SUM(ORDERDETAILS.QUANTITY *PRODUCTS.UNITPRICE) AS AVG_ORDER_VALUE
        FROM
            ORDERS
            INNER JOIN ORDERDETAILS
            ON ORDERS.ORDERID=ORDERDETAILS.ORDERID
            INNER JOIN PRODUCTS
            ON PRODUCTS.PRODUCTID=ORDERDETAILS.PRODUCTID
        GROUP BY
            ORDERS.ORDERID,
            ORDERS.ORDERDATE
    ) ORDERS_TOTAL
WHERE
    EXTRACT(YEAR FROM ORDERDATE) BETWEEN 2020 AND 2022
GROUP BY
    EXTRACT(YEAR FROM ORDERDATE)
ORDER BY
    ORDER_YEAR;

--6 Calculate the total number of products sold for each product category.


SELECT
    PRODUCTS.PRODUCTNAME,
    COUNT(ORDERDETAILS.QUANTITY)AS PRODUCTS_sold     --this will print the how many times the products are sold not the quantity
FROM
    PRODUCTS
    INNER JOIN ORDERDETAILS
    ON ORDERDETAILS.PRODUCTID=PRODUCTS.PRODUCTID
GROUP BY
    PRODUCTS.PRODUCTNAME
ORDER BY
    PRODUCTNAME DESC;

--7 Identify the product with the highest quantity sold in each product category.

SELECT
    PRODUCTS.PRODUCTNAME,
    SUM(ORDERDETAILS.QUANTITY)AS QUANTITY_OF_PRODUCTS          --this will print the quantity, indicating how many units of the products have been sold.
FROM
    PRODUCTS
    INNER JOIN ORDERDETAILS
    ON ORDERDETAILS.PRODUCTID=PRODUCTS.PRODUCTID  
GROUP BY
    PRODUCTS.PRODUCTNAME
ORDER BY
    PRODUCTNAME DESC;